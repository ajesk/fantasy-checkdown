{"version":3,"sources":["reducers/players.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","util/parseRankings.js","components/Import/Import.jsx","components/Header/Header.jsx","components/Content/AvailablePlayers/Player.jsx","components/Content/AvailablePlayers/PlayerTier.jsx","components/Content/AvailablePlayers/PlayerTiers.jsx","components/Content/AvailablePlayers/PlayerTable.jsx","components/Content/PickedPlayers/PickedTable.jsx","components/Content/Undo/Undo.jsx","components/Content/PlayerContentToolbar.jsx","components/Content/PlayerContent.jsx","App.js","registerServiceWorker.js","index.js"],"names":["getLastPickedNumber","state","Math","max","filter","p","picked","map","pickPlayer","action","rank","player","rk","setPickedPlayer","draftPlayer","drafted","tierBreak","some","x","parseInt","tiers","undoLastPick","lastPicked","players","type","data","todo","id","completed","VisibilityFilters","toggleContent","toggle","newFilter","visibilityFilters","SHOW_AVAILABLE","SHOW_PICKED","combineReducers","breakFpLines","raw","split","join","getFpHeaderCols","line","entry","camelCase","breakFpEntry","headers","lineArray","i","breakFpCsvEntry","useStyles","makeStyles","header","paddingBottom","importBox","fileUploadButton","marginRight","csvTextBox","width","connect","dispatch","classes","useState","rawData","setData","fileName","setFileName","Grid","container","direction","alignContent","justify","item","className","Typography","variant","xs","TextField","label","multiline","rows","onChange","e","target","value","Divider","orientation","flexItem","ButtonBase","component","Button","startIcon","Input","style","display","accept","multiple","file","files","name","text","then","t","color","onClick","res","parseFpCsv","theme","title","flexGrow","drawer","spacing","margin","Header","showDrawer","setDrawer","AppBar","position","Toolbar","IconButton","aria-label","fontSize","Drawer","anchor","open","onClose","Box","paragraph","href","opacity","transition","playerData","padding","rb","backgroundColor","wr","qb","te","k","dst","pos","TableRow","key","replace","toLowerCase","TableCell","align","playerName","green","avg","tierHead","tierNumber","PlayerTier","playerTier","TableBody","colSpan","PlayerTiers","v","a","indexOf","sort","b","tier","tablePaper","headerCell","availablePlayers","length","Paper","elevation","outlined","Table","size","TableHead","tableHead","draftedTierBreak","border","pickedTierBreak","pickedPlayers","column","selected","columnData","grid","gridItem","FormControlLabel","control","Switch","checked","inputProps","labelPlacement","tablePlaceMat","root","height","content","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","store","createStore","rootReducer","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2280a19f.chunk.js","sourcesContent":["function getLastPickedNumber(state) {\n  return Math.max(\n    ...state.filter(p => p.picked !== 0 && typeof p.picked !== 'undefined')\n      .map(p => p.picked), 0\n  );\n}\n\nfunction pickPlayer(action, state) {\n  const { rank } = action;\n\n  return state.map(player =>\n    player.rk === rank ?\n      setPickedPlayer(player, state) :\n      player\n  );\n}\n\nfunction draftPlayer(action, state) {\n  const { rank } = action;\n\n  return state.map(player =>\n    player.rk === rank ?\n      setPickedPlayer(player, state, true) :\n      player\n  );\n}\n\nfunction setPickedPlayer(player, state, drafted = false) {\n  return {\n    ...player,\n    picked: getLastPickedNumber(state) + 1,\n    drafted,\n    tierBreak: state.some(x => !x.picked && parseInt(x.tiers) < parseInt(player.tiers))\n  };\n}\n\nfunction undoLastPick(state) {\n  const lastPicked = getLastPickedNumber(state);\n\n  return state.map(player => {\n    if (player.picked === lastPicked) {\n      delete player.picked\n      delete player.tierBreak\n      delete player.drafted\n    }\n    return player;\n  });\n}\n\nconst players = (state = [], action) => {\n  switch (action.type) {\n    case 'PICK_PLAYER': {\n      return pickPlayer(action, state);\n    }\n    case 'DRAFT_PLAYER': {\n      return draftPlayer(action, state);\n    }\n    case 'UNDO_PICK': {\n      return undoLastPick(state);\n    }\n    case 'IMPORT_PLAYERS': {\n      return action.data;\n    }\n    case 'TOGGLE_PLAYERS':\n      return state.map(todo =>\n        (todo.id === action.id) ? { ...todo, completed: !todo.completed } : todo\n      );\n    default:\n      return state;\n  }\n}\n\nexport default players;","export const VisibilityFilters = {\n  SHOW_AVAILABLE: 'SHOW_AVAILABLE',\n  SHOW_PICKED: 'SHOW_PICKED'\n};\n\nexport const toggleContent = filter => ({\n  type: 'TOGGLE_CONTENT',\n  filter\n});\n\nexport const importPlayers = data => ({\n\ttype: 'IMPORT_PLAYERS',\n\tdata\n})\n\nexport const pickPlayer = rank => ({\n  type: 'PICK_PLAYER',\n  rank\n});\n\nexport const draftPlayer = rank => ({\n  type: 'DRAFT_PLAYER',\n  rank\n});\n\nexport const undoPick = () => ({\n  type: 'UNDO_PICK'\n});\n\n","import { VisibilityFilters } from '../actions';\n\nconst toggle = (action, state) => {\n  const newFilter = {};\n  newFilter[action] = !state[action]\n  return { ...state, ...newFilter };\n}\n\nconst visibilityFilters =\n  (state = { SHOW_AVAILABLE: true, SHOW_PICKED: true }, action) => {\n    switch (action.type) {\n      case 'TOGGLE_CONTENT':\n        return toggle(action.filter, state)\n      case 'HIDE_ALL':\n        return [];\n      case 'SHOW_ALL':\n        return [VisibilityFilters.SHOW_AVAILABLE, VisibilityFilters.SHOW_PICKED];\n      default:\n        return state\n    }\n  }\n\nexport default visibilityFilters;","import { combineReducers } from 'redux';\nimport players from './players';\nimport visibilityFilters from './visibilityFilter';\n\nexport default combineReducers({\n  players,\n  visibilityFilters\n});","import camelCase from 'lodash.camelcase';\n\n/**\n * Currently just supporting the FantasyPros csv dataset\n * @param {*} rawData \n */\nfunction breakFpLines(raw) {\n  return raw.split('\"').join('').split('\\n');\n}\n\nfunction getFpHeaderCols(line) {\n  return line.split(',').map((entry) => camelCase(entry));\n}\n\nfunction breakFpEntry(line, headers) {\n  return breakFpCsvEntry(line.split(','), headers);\n}\n\nfunction breakFpCsvEntry(lineArray, headers) {\n  const data = {};\n\n  lineArray.map((entry, i) => data[headers[i]] = entry.split('\"').join(''));\n\n  return data\n}\n\nconst parseFpCsv = (raw) => {\n  let headers = {};\n\n  return breakFpLines(raw).map((line, i) => {\n    if (i === 0) {\n      headers = getFpHeaderCols(line);\n      // eslint-disable-next-line\n      return;\n    }\n\n    return breakFpEntry(line, headers);\n  }).filter((res) => typeof res !== 'undefined');\n}\n\nconst testMethods = { breakFpLines, getFpHeaderCols, breakFpEntry };\nexport { parseFpCsv, testMethods };","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { importPlayers } from '../../actions';\nimport { parseFpCsv } from '../../util/parseRankings';\nimport { Button, Input, ButtonBase, Grid, TextField, Typography, Divider } from '@material-ui/core';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  header: {\n    paddingBottom: '2em'\n  },\n  importBox: {\n    paddingBottom: '2em'\n  },\n  fileUploadButton: {\n    marginRight: '1em'\n  },\n  csvTextBox: {\n    width: '100%'\n  }\n});\n\nconst Import = ({ dispatch }) => {\n  const classes = useStyles();\n  const [rawData, setData] = useState('');\n  const [fileName, setFileName] = useState('');\n\n  const handleTAChange = (e) => setData(e.target.value);\n\n  const handleSubmit = () => dispatch(importPlayers(parseFpCsv(rawData)));\n\n  const handleTest = (e) => {\n    const [file] = e.target.files;\n    setFileName(file.name);\n    file.text().then(t => setData(t));\n  };\n\n  return (\n    <Grid container direction=\"column\" alignContent=\"center\" justify=\"center\">\n      <Grid item className={classes.header}>\n        <Typography variant=\"h2\">Import FP CSV Data</Typography>\n      </Grid> \n      <Grid container direction=\"row\" alignContent=\"center\" justify=\"space-evenly\" className={classes.importBox}>\n        <Grid container item xs={4} alignContent=\"center\" justify=\"center\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Paste Ranking CSV Text\"\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            onChange={handleTAChange}\n            className={classes.csvTextBox}\n          />\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem />\n        <Grid container item xs={4} alignContent=\"center\" justify=\"center\">\n          <ButtonBase\n            component=\"label\"\n          >\n            <Button variant=\"contained\" startIcon={<SaveIcon />} component=\"span\" className={classes.fileUploadButton}>\n              Upload\n          </Button>\n            <Typography>{fileName}</Typography>\n            <Input\n              style={{ display: 'none' }}\n              accept=\".csv\"\n              id=\"contained-button-file\"\n              multiple\n              onChange={handleTest}\n              type=\"file\" />\n          </ButtonBase>\n        </Grid>\n      </Grid>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleSubmit}\n        startIcon={<ImportExportIcon />}\n      >\n        Import\n      </Button>\n    </Grid>\n  );\n};\n\nexport default connect()(Import);","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, IconButton, Drawer, Box } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: theme.spacing(50),\n    margin: theme.spacing(2)\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const [showDrawer, setDrawer] = useState(false);\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography variant=\"h3\" component=\"h1\" className={classes.title}>\n            Fantasy Checkdown Chart\n          </Typography>\n          <IconButton color=\"inherit\" aria-label=\"show menu\" onClick={() => setDrawer(true)}>\n            <MenuIcon fontSize=\"large\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer anchor=\"right\" open={showDrawer} onClose={() => setDrawer(false)}>\n        <Box className={classes.drawer}>\n          <Typography variant=\"h3\">Tier based drafting?..</Typography>\n          <Typography paragraph variant=\"inherit\">\n            Tier based drafting is a practice used in fantasy sport leagues to draft the best balanced team possible.\n            Simply put players are grouped into tiers. In each tier, the players are expected to perform at about the level\n            as the other players in their respective positions within the same tier. Most of the time players in a highest tier\n            will be picked before players of a lower tier are. There are times though that other drafters may not have the same\n            knowledge and will oft pick players in lower tiers. That is where the value of tier drafting is generated.\n          </Typography>\n          <Typography paragraph variant=\"inherit\">There are a few rules that should be followed when drafting in order of importance:</Typography>\n          <ol>\n            <li>Always attempt to take a player in the highest tier possible</li>\n            <li>If you have a choice between multiple players in the highest tier, take one from the position with the least options</li>\n            <li>Singleton position players should be prioritized more by preference than tier (e.g. don't feel obligated to take the lone QB early)</li>\n            <li>Tier drafting falls apart after a number of rounds (7-8)</li>\n            <li>Know when to break the rules, practice ahead of time to understand the flow of drafting</li>\n          </ol>\n          <Typography variant=\"h3\">How to use</Typography> \n          <ol>\n            <li>Get FP draft rankings CSV from <a href=\"https://www.fantasypros.com/nfl/rankings/half-point-ppr-cheatsheets.php\">here</a></li>\n            <li>Copy the text to the text box or upload the CSV directly</li>\n            <li>Click Import</li>\n            <li>Players will be listed out based upon tiers from the platform</li>\n            <li>Eliminate players as they are picked in the draft to get a good picture of who to draft</li>\n          </ol>\n        </Box>\n      </Drawer >\n    </>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CheckCircleTwoToneIcon from '@material-ui/icons/CheckCircleTwoTone';\nimport CancelIcon from '@material-ui/icons/CancelTwoTone';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport green from '@material-ui/core/colors/green';\nimport { draftPlayer, pickPlayer } from '../../../actions';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  player: {\n    opacity: 1,\n    '-webkit-transition': 'opacity 1000ms linear',\n    transition: 'opacity 1000ms linear',\n  },\n  playerData: {\n    color: 'whitesmoke',\n    fontSize: '1.5rem',\n    padding: '1px 24px 1px 16px'\n  },\n  rb: {\n    backgroundColor: '#68b609de',\n    '&:hover': {\n      backgroundColor: '#4F9D00'\n    }\n  },\n  wr: {\n    backgroundColor: '#2196f3de',\n    '&:hover': {\n      backgroundColor: '#087DDA'\n    }\n  },\n  qb: {\n    backgroundColor: '#DB2A1D',\n    '&:hover': {\n      backgroundColor: '#f44336de'\n    }\n  },\n  te: {\n    backgroundColor: '#E6A800',\n    '&:hover': {\n      backgroundColor: '#ffc106de'\n    }\n  },\n  k: {\n    backgroundColor: '#808080',\n    '&:hover': {\n      backgroundColor: '#676767'\n    }\n  },\n  dst: {\n    backgroundColor: '#808080',\n    '&:hover': {\n      backgroundColor: '#676767'\n    }\n  }\n});\n\nfunction getPosClass(pos) {\n  return pos.replace(/[0-9]/g, '').toLowerCase();\n}\n\nconst Player = ({ player, dispatch }) => {\n  const classes = useStyles();\n\n  return <TableRow key={player.rk} className={`${classes.player} ${classes[getPosClass(player.pos)]}`}>\n    <TableCell padding=\"none\" align=\"center\">\n      <IconButton aria-label={`select ${player.playerName}`} onClick={() => dispatch(draftPlayer(player.rk))}>\n        <CheckCircleTwoToneIcon fontSize=\"large\" style={{ color: green[1000] }} />\n      </IconButton>\n      <IconButton aria-label={`select ${player.playerName}`} onClick={() => dispatch(pickPlayer(player.rk))}>\n        <CancelIcon fontSize=\"large\" color=\"secondary\" />\n      </IconButton>\n    </TableCell>\n    <TableCell className={classes.playerData} align=\"center\">{player.rk}</TableCell>\n    <TableCell className={classes.playerData}>{player.playerName}</TableCell>\n    <TableCell className={classes.playerData} align=\"center\">{player.pos}</TableCell>\n    <TableCell className={classes.playerData} align=\"center\">{player.avg}</TableCell>\n  </TableRow>\n};\n\nPlayer.propTypes = {\n  player: PropTypes.object.isRequired,\n}\n\nexport default connect()(Player);","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Player from './Player'\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  tierHead: {\n    backgroundColor: 'black'\n  },\n  tierNumber: {\n    color: 'white',\n    fontSize: \"1.5rem\"\n  }\n});\n\nconst PlayerTier = ({ playerTier, players }) => {\n  const classes = useStyles();\n\n  return (\n    <TableBody>\n      <TableRow className={classes.tierHead}>\n        <TableCell align=\"center\" className={classes.tierNumber} colSpan={10}>Tier {playerTier}</TableCell>\n      </TableRow>\n      {\n        players.map((player) =>\n          <Player\n            key={player.rk}\n            player={player}\n          />)\n      }\n    </TableBody>\n  )\n};\n\nPlayerTier.propTypes = {\n  playerTier: PropTypes.string.isRequired,\n  players: PropTypes.arrayOf(\n    PropTypes.shape({})\n  ).isRequired,\n}\n\nexport default PlayerTier;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PlayerTier from './PlayerTier';\n\nconst PlayerTiers = ({ players }) => {\n  const orderedPlayersTiers = () =>\n    players.map((p) => p.tiers)\n      .filter((v, i, a) => a.indexOf(v) === i)\n      .sort((a, b) => a.tiers > b.tiers);\n\n  return (\n    orderedPlayersTiers().map((tier) =>\n      <PlayerTier\n        key={tier}\n        players={players.filter((p) => p.tiers === tier)}\n        playerTier={tier}\n      />\n    )\n  );\n};\n\nPlayerTiers.propTypes = {\n  players: PropTypes.arrayOf(\n    PropTypes.shape({}).isRequired\n  ).isRequired,\n}\n\nexport default PlayerTiers;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { connect } from 'react-redux';\nimport PlayerTiers from './PlayerTiers';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  tablePaper: {\n    // marginTop: theme.spacing(2)\n  },\n  headerCell: {\n    'font-weight': 'bold',\n    fontSize: '1.5rem',\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  return ({\n    availablePlayers: state.players.filter(p => !p.picked),\n  })\n};\n\nconst PlayerTable = ({ availablePlayers }) => {\n  const classes = useStyles();\n\n  return (\n    availablePlayers.length !== 0 ?\n      <Paper elevation={3} outlined=\"true\" className={classes.tablePaper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.headerCell} align=\"center\"></TableCell>\n              <TableCell className={classes.headerCell} align=\"center\">Rank</TableCell>\n              <TableCell className={classes.headerCell}>Name</TableCell>\n              <TableCell className={classes.headerCell} align=\"center\">Position</TableCell>\n              <TableCell className={classes.headerCell} align=\"center\">ADP</TableCell>\n            </TableRow>\n          </TableHead>\n          <PlayerTiers players={availablePlayers} />\n        </Table>\n      </Paper>\n      :\n      ''\n  )\n};\n\nPlayerTable.propTypes = {\n  availablePlayers: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n}\n\nexport default connect(\n  mapStateToProps\n)(PlayerTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles({\n  playerData: {\n    fontSize: '1.5rem',\n    padding: '1px 24px 1px 16px'\n  },\n  tableHead: {\n    fontSize: '1.5rem',\n    'font-weight': 'bold',\n    padding: '1px 24px 1px 16px'\n  },\n  draftedTierBreak: {\n    border: '3px solid red'\n  },\n  pickedTierBreak: {\n    border: '3px solid green'\n  }\n});\n\nconst PickedTable = ({ pickedPlayers }) => {\n  const classes = useStyles();\n  const tierBreakStyle = (drafted) => drafted ? classes.draftedTierBreak : classes.pickedTierBreak;\n\n  return (\n    <Paper elevation={3} outlined=\"true\">\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            {\n              [\"Pick #\", \"Tier\", \"Name\", \"Position\"].map(column =>\n                <TableCell key={column} className={classes.tableHead}>{column}</TableCell>)\n            }\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            pickedPlayers.sort((a, b) => b.picked - a.picked)\n              .map((player) =>\n                <TableRow key={player.picked} selected={player.drafted} className={player.tierBreak ? tierBreakStyle(player.drafted) : ''}>\n                  {[player.picked, player.tiers, player.playerName, player.pos.replace(/[0-9]/g, '')]\n                    .map((columnData, i) =>\n                      <TableCell key={i} className={classes.playerData}>{columnData}</TableCell>\n                    )\n                  }\n                </TableRow>\n              )\n          }\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n};\n\nPickedTable.propTypes = {\n  pickedPlayers: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    pickedPlayers: state.players.filter(p => p.picked),\n  })\n};\n\nexport default connect(\n  mapStateToProps\n)(PickedTable);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { undoPick } from '../../../actions';\nimport Button from '@material-ui/core/Button';\nimport UndoIcon from '@material-ui/icons/Undo';\n\nconst mapStateToProps = (state) => state;\n\nconst Undo = ({ dispatch, players }) => players.length !== 0 && (\n  <Button\n    variant=\"contained\"\n    color=\"secondary\"\n    startIcon={<UndoIcon />}\n    onClick={() => dispatch(undoPick())}\n\n  >\n    Undo\n  </Button>\n);\n\nUndo.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  players: PropTypes.array.isRequired,\n}\n\nexport default connect(mapStateToProps)(Undo);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { VisibilityFilters, toggleContent } from '../../actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Undo from './Undo/Undo'\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst mapStateToProps = (state) => state;\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    padding: theme.spacing(1)\n  },\n  gridItem: {\n    margin: `0 ${theme.spacing(1)}px`\n  }\n}));\n\nconst PlayerContentToolbar = ({ dispatch, visibilityFilters }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"row\" justify=\"space-between\" className={classes.grid}>\n      <Undo />\n      <Grid item>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={visibilityFilters[VisibilityFilters.SHOW_AVAILABLE]}\n              onChange={() => dispatch(toggleContent(VisibilityFilters.SHOW_AVAILABLE))}\n              name={VisibilityFilters.SHOW_AVAILABLE}\n              color=\"primary\"\n              inputProps={{ 'aria-label': 'toggle available players visibility' }}\n            />\n          }\n          label=\"Available Players\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={visibilityFilters[VisibilityFilters.SHOW_PICKED]}\n              onChange={() => dispatch(toggleContent(VisibilityFilters.SHOW_PICKED))}\n              name={VisibilityFilters.SHOW_PICKED}\n              color=\"primary\"\n              inputProps={{ 'aria-label': 'toggle picked players visibility' }}\n            />\n          }\n          label=\"Picked Players\"\n          labelPlacement=\"start\"\n        />\n      </Grid>\n      </Grid>\n  );\n};\n\nexport default connect(mapStateToProps)(PlayerContentToolbar);","import Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { VisibilityFilters } from '../../actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlayerTable from './AvailablePlayers/PlayerTable';\nimport PickedTable from './PickedPlayers/PickedTable';\nimport Grid from '@material-ui/core/Grid';\nimport PlayerContentToolbar from './PlayerContentToolbar';\n\n\nconst mapStateToProps = (state) => state;\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    margin: `0 ${theme.spacing(1)}px`\n  }\n}));\n\nconst PlayerContent = ({ visibilityFilters, players = [] }) => {\n  const classes = useStyles();\n\n  return players.length ?\n    (\n      <Box>\n        <Paper className={classes.tablePlaceMat}>\n          <PlayerContentToolbar />\n          <Grid container direction=\"row\" justify=\"space-between\">\n            {visibilityFilters[VisibilityFilters.SHOW_AVAILABLE] &&\n              <Grid item xs className={classes.gridItem}>\n                <PlayerTable />\n              </Grid>\n            }\n            {\n              visibilityFilters[VisibilityFilters.SHOW_PICKED] &&\n              <Grid item xs className={classes.gridItem}>\n                <PickedTable />\n              </Grid>\n            }\n          </Grid>\n        </Paper>\n      </Box>\n    ) :\n    '';\n};\n\nexport default connect(mapStateToProps)(PlayerContent);","import React from 'react';\nimport Import from './components/Import/Import';\nimport Header from './components/Header/Header';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport PlayerContent from './components/Content/PlayerContent';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  content: {\n    padding: theme.spacing(5)\n  },\n  tablePlaceMat: {\n    // padding: theme.spacing(1)\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Header />\n      <Grid container direction=\"column\" justify=\"center\" alignContent=\"center\" className={classes.content}>\n        <PlayerContent />\n        <Import />\n      </Grid>\n    </Box>\n  )\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n\t<Provider store={store}>\n    \t<App />\n\t</Provider>,\n\tdocument.getElementById('root'));\n\t  \nregisterServiceWorker();\n"],"sourceRoot":""}